package br.unesp.amoraes.dbvis.ui;

import br.unesp.amoraes.dbvis.App;
import br.unesp.amoraes.dbvis.beans.DatabaseConnectionEntity;
import br.unesp.amoraes.dbvis.dao.DatabaseConnectionDAO;
import br.unesp.amoraes.dbvis.internals.FunctionsHelper;
import br.unesp.amoraes.dbvis.internals.ValueTextItem;
import br.unesp.amoraes.dbvis.internals.SelectedData;
import br.unesp.amoraes.dbvis.internals.SelectedRelationship;
import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 * UI: SQL commands and display of selected data
 * @author Alessandro Moraes (sanfatec at gmail.com)
 * @since 2013-01-04
 */
public class DataSelectIFrame extends javax.swing.JInternalFrame {

    private DefaultComboBoxModel<ValueTextItem<DatabaseConnectionEntity>> listSavedConnections;
    private MainWindow mainWindow;
    private SelectedData selectedData;
    /**
     * Creates new form DataSelectIFrame
     */
    public DataSelectIFrame(MainWindow mainWindow) {
        this.mainWindow = mainWindow;
        loadSavedConnectionsList();
        initComponents();
        jTabbedPaneSQL.setEnabledAt(1, false);
    }
    
    protected void loadSavedConnectionsList() {
        if(listSavedConnections == null){
            listSavedConnections = new DefaultComboBoxModel<ValueTextItem<DatabaseConnectionEntity>>();
        }
        listSavedConnections.removeAllElements();
        listSavedConnections.addElement(new ValueTextItem<DatabaseConnectionEntity>(null, FunctionsHelper.getString("General.select")));
        List<DatabaseConnectionEntity> listConnections = DatabaseConnectionDAO.listAll();
        for(DatabaseConnectionEntity e : listConnections){
            listSavedConnections.addElement(new ValueTextItem(e, e.getName()));
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPaneSQL = new javax.swing.JTabbedPane();
        jPanelDataSelect = new javax.swing.JPanel();
        jLabelConnection = new javax.swing.JLabel();
        jComboBoxConnection = new javax.swing.JComboBox();
        jButtonRunSQL = new javax.swing.JButton();
        jScrollPaneSQL = new javax.swing.JScrollPane();
        jTextAreaSQL = new javax.swing.JTextArea();
        jScrollPaneResultSet = new javax.swing.JScrollPane();
        jTableResultSet = new javax.swing.JTable();
        jPanelRelationshipSelect = new javax.swing.JPanel();
        jLabelConnectionRel = new javax.swing.JLabel();
        jLabelConnectionRelName = new javax.swing.JLabel();
        jScrollPaneSQLRel = new javax.swing.JScrollPane();
        jTextAreaSQLRel = new javax.swing.JTextArea();
        jLabelIdColumn = new javax.swing.JLabel();
        jComboBoxIdColumn = new javax.swing.JComboBox();
        jButtonRunSQLRel = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableResultSetRel = new javax.swing.JTable();

        setMaximizable(true);
        setResizable(true);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("br/unesp/amoraes/dbvis/ui/Bundle"); // NOI18N
        setTitle(bundle.getString("DataSelectIFrame.title")); // NOI18N

        jLabelConnection.setText(bundle.getString("DataSelectIFrame.jLabelConnection.text")); // NOI18N

        jComboBoxConnection.setModel(listSavedConnections);

        jButtonRunSQL.setText(bundle.getString("DataSelectIFrame.jButtonRunSQL.text")); // NOI18N
        jButtonRunSQL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRunSQLActionPerformed(evt);
            }
        });

        jTextAreaSQL.setColumns(20);
        jTextAreaSQL.setRows(5);
        jTextAreaSQL.setText(bundle.getString("DataSelectIFrame.jTextAreaSQL.text")); // NOI18N
        jScrollPaneSQL.setViewportView(jTextAreaSQL);

        jTableResultSet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPaneResultSet.setViewportView(jTableResultSet);

        javax.swing.GroupLayout jPanelDataSelectLayout = new javax.swing.GroupLayout(jPanelDataSelect);
        jPanelDataSelect.setLayout(jPanelDataSelectLayout);
        jPanelDataSelectLayout.setHorizontalGroup(
            jPanelDataSelectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDataSelectLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDataSelectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDataSelectLayout.createSequentialGroup()
                        .addComponent(jLabelConnection)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxConnection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonRunSQL)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPaneSQL, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
                    .addComponent(jScrollPaneResultSet, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelDataSelectLayout.setVerticalGroup(
            jPanelDataSelectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDataSelectLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDataSelectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonRunSQL)
                    .addGroup(jPanelDataSelectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelConnection)
                        .addComponent(jComboBoxConnection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneSQL, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneResultSet, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPaneSQL.addTab(bundle.getString("DataSelectIFrame.jPanelDataSelect.TabConstraints.tabTitle"), jPanelDataSelect); // NOI18N

        jLabelConnectionRel.setText(bundle.getString("DataSelectIFrame.jLabelConnectionRel.text")); // NOI18N

        jLabelConnectionRelName.setText(bundle.getString("DataSelectIFrame.jLabelConnectionRelName.text")); // NOI18N

        jTextAreaSQLRel.setColumns(20);
        jTextAreaSQLRel.setRows(5);
        jTextAreaSQLRel.setText(bundle.getString("DataSelectIFrame.jTextAreaSQLRel.text")); // NOI18N
        jScrollPaneSQLRel.setViewportView(jTextAreaSQLRel);

        jLabelIdColumn.setText(bundle.getString("DataSelectIFrame.jLabelIdColumn.text")); // NOI18N

        jButtonRunSQLRel.setText(bundle.getString("DataSelectIFrame.jButtonRunSQLRel.text")); // NOI18N
        jButtonRunSQLRel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRunSQLRelActionPerformed(evt);
            }
        });

        jTableResultSetRel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTableResultSetRel);

        javax.swing.GroupLayout jPanelRelationshipSelectLayout = new javax.swing.GroupLayout(jPanelRelationshipSelect);
        jPanelRelationshipSelect.setLayout(jPanelRelationshipSelectLayout);
        jPanelRelationshipSelectLayout.setHorizontalGroup(
            jPanelRelationshipSelectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRelationshipSelectLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelRelationshipSelectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
                    .addComponent(jScrollPaneSQLRel)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelRelationshipSelectLayout.createSequentialGroup()
                        .addGroup(jPanelRelationshipSelectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelRelationshipSelectLayout.createSequentialGroup()
                                .addComponent(jLabelConnectionRel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelConnectionRelName))
                            .addGroup(jPanelRelationshipSelectLayout.createSequentialGroup()
                                .addComponent(jLabelIdColumn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxIdColumn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonRunSQLRel)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelRelationshipSelectLayout.setVerticalGroup(
            jPanelRelationshipSelectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRelationshipSelectLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelRelationshipSelectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelConnectionRel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelConnectionRelName))
                .addGap(1, 1, 1)
                .addGroup(jPanelRelationshipSelectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelIdColumn)
                    .addComponent(jComboBoxIdColumn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonRunSQLRel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneSQLRel, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPaneSQL.addTab(bundle.getString("DataSelectIFrame.jPanelRelationshipSelect.TabConstraints.tabTitle"), jPanelRelationshipSelect); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneSQL, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPaneSQL, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonRunSQLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRunSQLActionPerformed
        if(jComboBoxConnection.getSelectedIndex() < 1){
            JOptionPane.showMessageDialog(this, FunctionsHelper.getString("DataSelectIFrame.error.selectConnection"), FunctionsHelper.getString("General.error"), JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(jTextAreaSQL.getText().trim().equals("")){
            JOptionPane.showMessageDialog(this, FunctionsHelper.getString("DataSelectIFrame.error.emptySQL"), FunctionsHelper.getString("General.error"), JOptionPane.ERROR_MESSAGE);
            return;
        }
        jTabbedPaneSQL.setEnabledAt(1, false);
        DatabaseConnectionEntity databaseConnectionSelected = ((ValueTextItem<DatabaseConnectionEntity>)jComboBoxConnection.getSelectedItem()).getValue();
        try {   
            //make the connection
            mainWindow.getPalleteIFrame().disableAllComponents();
            Class.forName(databaseConnectionSelected.getDriver());
            Connection connection = FunctionsHelper.getJDBCConnection(databaseConnectionSelected);
            String sql = jTextAreaSQL.getText();
            PreparedStatement pstm = connection.prepareStatement(sql);
            ResultSet rs = pstm.executeQuery();
            FunctionsHelper.logOnConsole(FunctionsHelper.getString("DataSelectIFrame.message.runningSQL"));
            selectedData = new SelectedData(rs);
            rs.close();
            connection.close();
            FunctionsHelper.logOnConsole(FunctionsHelper.getString("DataSelectIFrame.message.finishedSQL")+" "+selectedData.getRowCount());
            jTableResultSet.setModel(selectedData.getTableModel());
            jTableResultSet.repaint();
            if(App.getCurrentProjectType().getRelationshipStep()){
                jLabelConnectionRelName.setText(((ValueTextItem<DatabaseConnectionEntity>)jComboBoxConnection.getSelectedItem()).getLabel());
                DefaultComboBoxModel<ValueTextItem<Integer>> columnIdModel = new DefaultComboBoxModel<ValueTextItem<Integer>>();
                columnIdModel.addElement(new ValueTextItem<Integer>(null, FunctionsHelper.getString("General.select")));
                for(int column = 0; column < selectedData.getColumnCount(); column++){
                    columnIdModel.addElement(new ValueTextItem<Integer>(column,selectedData.getColumnNames()[column]));
                }
                jComboBoxIdColumn.setModel(columnIdModel);
                jTabbedPaneSQL.setEnabledAt(1, true);
            }else{
                mainWindow.getPalleteIFrame().enableAllComponents(selectedData,null,null,null);
            }
            for(int column = 0; column < selectedData.getColumnCount(); column++){
                if(FunctionsHelper.columnHaveNulls(selectedData, column)){
                    FunctionsHelper.logOnConsole(FunctionsHelper.getString("DataSelectIFrame.message.columnHaveNulls", new String[]{ selectedData.getColumnNames()[column] }), Color.RED);
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DataSelectIFrame.class.getName()).log(Level.SEVERE, null, ex);
            FunctionsHelper.logOnConsole(FunctionsHelper.getString("DataSelectIFrame.message.cannotFindJDBCDriver")+" ("+databaseConnectionSelected.getDriver()+")", Color.RED);
        } catch (SQLException ex) {
            //SQL error shows on console
            FunctionsHelper.logOnConsole(FunctionsHelper.getString("DataSelectIFrame.message.SQLError")+" ("+ex.getMessage()+")", Color.RED);
        }
        
    }//GEN-LAST:event_jButtonRunSQLActionPerformed

    private void jButtonRunSQLRelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRunSQLRelActionPerformed
       if(jComboBoxConnection.getSelectedIndex() < 1){
            JOptionPane.showMessageDialog(this, FunctionsHelper.getString("DataSelectIFrame.error.selectConnection"), FunctionsHelper.getString("General.error"), JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(jTextAreaSQL.getText().trim().equals("")){
            JOptionPane.showMessageDialog(this, FunctionsHelper.getString("DataSelectIFrame.error.emptySQL"), FunctionsHelper.getString("General.error"), JOptionPane.ERROR_MESSAGE);
            return;
        }
        ValueTextItem<Integer> idColumn = (ValueTextItem<Integer>) jComboBoxIdColumn.getSelectedItem();
        if(idColumn.getValue() == null){
            JOptionPane.showMessageDialog(this, FunctionsHelper.getString("DataSelectIFrame.error.selectIdColumn"), FunctionsHelper.getString("General.error"), JOptionPane.ERROR_MESSAGE);
            return;
        }
        DatabaseConnectionEntity databaseConnectionSelected = ((ValueTextItem<DatabaseConnectionEntity>)jComboBoxConnection.getSelectedItem()).getValue();
        try {   
            //make the connection
            mainWindow.getPalleteIFrame().disableAllComponents();
            Class.forName(databaseConnectionSelected.getDriver());
            Connection connection = FunctionsHelper.getJDBCConnection(databaseConnectionSelected);
            String sql = jTextAreaSQLRel.getText();
            int i = 0; 
            List<SelectedRelationship> rels = new ArrayList<SelectedRelationship>();
            while(selectedData != null  && rels.size() < 10 && i < selectedData.getRowCount()){
                List<SelectedRelationship> r = FunctionsHelper.getRelationshionship(selectedData, i, idColumn.getValue().intValue(), sql, connection);
                rels.addAll(r);
                i++;
            }
            connection.close();
            FunctionsHelper.logOnConsole(FunctionsHelper.getString("DataSelectIFrame.message.finishedSQLRel",new String[]{rels.size()+""}));
            jTableResultSetRel.setModel(SelectedRelationship.getTableModel(rels));
            jTableResultSetRel.repaint();
            mainWindow.getPalleteIFrame().enableAllComponents(selectedData,sql,idColumn.getValue(),databaseConnectionSelected);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DataSelectIFrame.class.getName()).log(Level.SEVERE, null, ex);
            FunctionsHelper.logOnConsole(FunctionsHelper.getString("DataSelectIFrame.message.cannotFindJDBCDriver")+" ("+databaseConnectionSelected.getDriver()+")", Color.RED);
        } catch (SQLException ex) {
            //SQL error shows on console
            FunctionsHelper.logOnConsole(FunctionsHelper.getString("DataSelectIFrame.message.SQLError")+" ("+ex.getMessage()+")", Color.RED);
        }
    }//GEN-LAST:event_jButtonRunSQLRelActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonRunSQL;
    private javax.swing.JButton jButtonRunSQLRel;
    private javax.swing.JComboBox jComboBoxConnection;
    private javax.swing.JComboBox jComboBoxIdColumn;
    private javax.swing.JLabel jLabelConnection;
    private javax.swing.JLabel jLabelConnectionRel;
    private javax.swing.JLabel jLabelConnectionRelName;
    private javax.swing.JLabel jLabelIdColumn;
    private javax.swing.JPanel jPanelDataSelect;
    private javax.swing.JPanel jPanelRelationshipSelect;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPaneResultSet;
    private javax.swing.JScrollPane jScrollPaneSQL;
    private javax.swing.JScrollPane jScrollPaneSQLRel;
    private javax.swing.JTabbedPane jTabbedPaneSQL;
    private javax.swing.JTable jTableResultSet;
    private javax.swing.JTable jTableResultSetRel;
    private javax.swing.JTextArea jTextAreaSQL;
    private javax.swing.JTextArea jTextAreaSQLRel;
    // End of variables declaration//GEN-END:variables

    

}
